{
  "swagger": "2.0",
  "info": {
    "title": "Client Project API",
    "description": "API documentation for Client Project API",
    "version": "1.0.0"
  },
  "host": "localhost:5000",
  "basePath": "/api",
  "schemes": [
    "http"
  ],
  "securityDefinitions": {
    "bearerAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "Enter JWT token as: Bearer <token>"
    }
  },
  "paths": {
    "/auth/Signup": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "User registration",
        "description": "This endpoint allows users to register by providing their details.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "User registration details",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "fullname": {
                  "type": "string",
                  "example": "John Doe"
                },
                "emailaddress": {
                  "type": "string",
                  "example": " johndoe@example.com"
                },
                "password": {
                  "type": "string",
                  "example": "password123"
                },
                "confirmpassword": {
                  "type": "string",
                  "example": "password123"
                }
              },
              "required": [
                "fullname",
                "emailaddress",
                "password",
                "confirmpassword"
              ]
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/auth/signin": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "User login",
        "description": "This endpoint allows users to log in by providing their email and password.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "User login details",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "emailaddress": {
                  "type": "string",
                  "example": " johndoe@example.com"
                },
                "password": {
                  "type": "string",
                  "example": "password123"
                }
              },
              "required": [
                "emailaddress",
                "password"
              ]
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "User logout",
        "description": "This endpoint allows users to log out by invalidating their token.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "token",
            "in": "header",
            "description": "User authentication token",
            "required": true,
            "type": "string",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "Bearer <token>"
                }
              },
              "required": [
                "type"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/auth/getAllUsers": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Get all users",
        "description": "This endpoint retrieves all registered users.",
        "responses": {
          "200": {
            "description": "List of all users"
          }
        }
      }
    },
    "/auth/google": {
      "get": {
        "tags": [
          "GoogleAuth"
        ],
        "summary": "Authenticate with Google",
        "description": "Initiate Google OAuth authentication.",
        "responses": {
          "302": {
            "description": "Redirects to Google for authentication."
          }
        }
      }
    },
    "/auth/google/callback": {
      "get": {
        "tags": [
          "GoogleAuth"
        ],
        "summary": "Google OAuth callback",
        "description": "Handles Google OAuth callback and returns JWT token.",
        "responses": {
          "200": {
            "description": "JWT token returned after successful authentication.",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string",
                  "example": "jwt_token_here"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/auth/facebook": {
      "get": {
        "tags": [
          "FacebookAuth"
        ],
        "summary": "Authenticate with Facebook",
        "description": "Initiate Facebook OAuth authentication.",
        "responses": {
          "302": {
            "description": "Redirects to Facebook for authentication."
          }
        }
      }
    },
    "/auth/facebook/callback": {
      "get": {
        "tags": [
          "FacebookAuth"
        ],
        "summary": "Facebook OAuth callback",
        "description": "Handles Facebook OAuth callback and returns JWT token.",
        "responses": {
          "200": {
            "description": "JWT token returned after successful authentication.",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string",
                  "example": "jwt_token_here"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/image/upload": {
      "post": {
        "tags": [
          "Image"
        ],
        "summary": "Upload an image",
        "description": "This endpoint allows users to upload an image file.",
        "parameters": [
          {
            "name": "image",
            "in": "formData",
            "description": "Image file to upload",
            "required": true,
            "type": "file",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "format": {
                  "type": "string",
                  "example": "binary"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/products/addNewUsers": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Add a new user",
        "description": "This endpoint allows you to add a new user to the system.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "User details",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 1
                },
                "Learners": {
                  "type": "string",
                  "example": "John Doe"
                },
                "email": {
                  "type": "string",
                  "example": "john.doe@example.com"
                },
                "avatar": {
                  "type": "string",
                  "example": "https://res.cloudinary.com/dpxvet5ra/image/upload/v1748110022/xmzqvlmrdtm7tzqwlr1m.jpg"
                },
                "country": {
                  "type": "string",
                  "example": "USA"
                },
                "Language": {
                  "type": "string",
                  "example": "English"
                },
                "Occupation": {
                  "type": "string",
                  "example": "Engineer"
                },
                "Objective": {
                  "type": "string",
                  "example": "Learn about organic food"
                },
                "Subscription": {
                  "type": "boolean",
                  "example": true
                }
              },
              "required": [
                "id",
                "Learners",
                "email",
                "avatar",
                "country",
                "Language",
                "Occupation",
                "Objective",
                "Subscription"
              ]
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/customers/add": {
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "Add a new product",
        "description": "This endpoint adds a new product to the database.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "example": "Organic Apple"
                },
                "productImage": {
                  "type": "string",
                  "example": "https://res.cloudinary.com/dpxvet5ra/image/upload/v1748110022/xmzqvlmrdtm7tzqwlr1m.jpg"
                },
                "description": {
                  "type": "string",
                  "example": "Fresh organic apples from local farms"
                },
                "price": {
                  "type": "number",
                  "example": 120
                },
                "discount": {
                  "type": "number",
                  "example": 10
                },
                "category": {
                  "type": "string",
                  "example": "Fruits"
                },
                "rating": {
                  "type": "number",
                  "example": 4.5
                },
                "warrantyPeriod": {
                  "type": "string",
                  "example": "6 months"
                },
                "returnPolicy": {
                  "type": "string",
                  "example": "30 days return"
                },
                "stock": {
                  "type": "number",
                  "example": 50
                }
              },
              "required": [
                "title",
                "productImage",
                "description",
                "price",
                "discount",
                "category",
                "rating",
                "warrantyPeriod",
                "returnPolicy",
                "stock"
              ]
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/v1/auth/google/login": {
      "post": {
        "tags": [
          "Google Auth"
        ],
        "summary": "Google login",
        "description": "Google login using idToken from client",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "idToken"
                ],
                "properties": {
                  "idToken": {
                    "type": "string",
                    "description": "Google ID token",
                    "example": "ya29.a0ARrdaM..."
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ]
}